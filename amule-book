#!/bin/bash

config_file=".ambotrc";

clean_token(){
	sql="update book set book_name=replace(book_name,\"$1\",\"\")";
	${mysql_cmd} "${sql}" 2>/dev/null;
}

# detect magazine via filename.
cmag(){
	mlist="gennaio\|febbraio\|marzo\|aprile\|maggio\|Giugno\|luglio\|agosto\|settembre\|ottombre\|novembre\|dicembre";
	mlist="${mlist}\|enero\|febrero\|marzo\|abril\|mayo\|junio\|julio\|agosto\|septiembre\|octubre\|noviembre\|diciembre";
	mlist="${mlist}\|Janvier\|Février\|Mars\|Avril\|Mai\|Juin\|Juillet\|Août\|Septembre\|Octobre\|Novembre\|Décembre"
	mlist="${mlist}\|Januar\|Februar\|März\|Mai\|Juni\|Juli\|Oktober\|Dezember"

	today="2019-08-01"
	echo "mlist:${mlist}"
	ldsql="select book_name from book where opstatus !='05' and date(ts) >= '${today}'";
	${mysql_cmd} "${ldsql}" 2>/dev/null | while read bname
	do
		ismag=0
		echo "${bname}" | grep -i -w "${mlist}" 1>/dev/null 2>/dev/null;
		if [ $? -eq 0 ]; then
			echo "${bname}" | grep -w "20[0-2][0-9]" 2>/dev/null 1>/dev/null;
			if [ $? -eq 0 ]; then
				ismag=1;
			fi
		fi

		if [ ${ismag} -eq 1 ]; then
			echo "YES: ${bname}"
		fi
	done
}


# remove spaces from filenames.
ftrim(){
    export PATH=${PATH}:/soft/bin:
	pgoffset=$1
	if [[ $# -eq 0 ]]; then
	   pgoffset=0
	fi

	ldsql="select pk_book from book where opstatus!='05' \
		   order by book_name \
		   limit ${pgoffset},20";

	${mysql_cmd} "${ldsql}" 2>/dev/null | while read bookid
	do
		fname=$(${mysql_cmd} "select book_name from book where pk_book=${bookid}" 2>/dev/null);
		nfname=$(trim "${fname}");
		
		if [ $? -gt 0 ]; then
			continue;
		fi

		echo "FILE: |${fname}|${nfname}|";	
		${mysql_cmd} "update book set book_name=\"${nfname}\" where pk_book=${bookid}" 2>/dev/null;
	done
}

# retrieve publisher information from filename.
retrieve_publisher_info(){
	if [ $# -eq 0 ]; then
		exit 1;
	fi

	keyitem=$1

	echo "TRYING TO UPDATE DATABASE NOW! CONFIRM?(no) [yes/no]"
	echo "keyword: ${keyitem}";
	read confirm

	if [ -z ${confirm} ]; then
	   confirm=no
	fi

	echo "confirm information: ${confirm}";

	echo "key item: |${keyitem}|"
	if [ ${confirm} == "yes" ]; then
		${mysql_cmd} "select pk_book from book where opstatus not in('04','05') and book_name like \"%${keyitem}%\" order by book_name limit 1000" 2>/dev/null | while read bookid
		do
			fname=$(${mysql_cmd} "select book_name from book where pk_book=${bookid}" 2>/dev/null);
			nfname=$(echo "${fname}" | sed "s/${keyitem}//g");
			echo "file to handle:|${fname}|${nfname}|";
		
			${mysql_cmd} "update book set book_name=\"${nfname}\",publisher=\"${keyitem}\" where pk_book=${bookid}" 2>/dev/null;
		done
	fi
}

# identify magazine from filename.
is_magzine(){
	mlist="january\|february\|march\|april\|may\|june\|july\|august\|september\|october\|november\|december";

	today="2019-08-01"
	ldsql="select book_name from book where opstatus !='05' and attribute='00' and date(ts) >= '${today}'";

	${mysql_cmd} "${ldsql}" 2>/dev/null | while read bname
	do
		ismag=0
		echo "${bname}" | grep -i "${mlist}" 1>/dev/null 2>/dev/null;

		if [ $? -eq 0 ]; then
			echo "${bname}" | grep "20[0-2][0-9]" 2>/dev/null 1>/dev/null;
			if [ $? -eq 0 ]; then
				ismag=1;
			fi
		fi

		echo "${bname}" | grep "20[0-2][0-9][\.\-_][0-1][0-9]" 2>/dev/null 1>/dev/null;
		if [ $? -eq 0 ]; then
			ismag=1
		fi

		if [ ${ismag} -eq 1 ]; then
			sql="update book set attribute='02' where book_name=\"${bname}\"";
			${mysql_cmd} "${sql}" 2>/dev/null;

			echo "magzine: ${bname}";
		fi
	done
}

get_count(){
   ${mysql_cmd} "select count(*) from book" 2>/dev/null;
}

exists(){
    hash=$1
    sql="select count(book_code) from book where hash=\"${hash}\"";
    count=$(${mysql_cmd} "${sql}" 2>/dev/null);
    if [ $count -eq 0 ]; then
        exit 0;
    fi

    exit 1;
}

# init working environment
init_env(){
	binpath=$(dirname $0);
    basedir=$(cd ${binpath};pwd);
    cd "${basedir}";

	if [ ! -e ${config_file} ]; then
        # TODO display in color
		echo "config file [${config_file}] not exist.";
		exit 2;
	fi

	. "${config_file}"
}

rename_from_last_version(){
	filelist="$1";
	if [ ! -e ${filelist} ]; then
		amlog "file list [${filelist}] not exist.";
	    return;
	fi

    amlog "rename from last version: ${filelist}";
	cat "${filelist}" | while read book_code; do
	    book_name=$($mysql_cmd "select book_name from book where book_code=\"${book_code}\"" 2>/dev/null);
		${mysql_cmd} "update book set book_name=\"${book_name}\" where book_name=\"${book_code}\"" 2>/dev/null;

		amlog "book-name updated: ${book_code},${book_name}";
	done
}

count_magazine(){
    amlog "counting the number of magazine now!";
	${mysql_cmd} "select magazine_name from magazine_meta" | while read mag; do
		countsql="select count(*) from book \
		    where \
			    book_name like \"%${mag}%\" \
			and attribute='02' \
			and opstatus!='05'";

	    mcount=$(${mysql_cmd} "${countsql}" 2>/dev/null);
		amlog "counting: ${mag} , ${mcount}";

		setsql="update magazine_meta set effective_count=${mcount} where magazine_name=\"${mag}\""
		${mysql_cmd} "${setsql}" 2>/dev/null;
	done
}

# retrieve duplicated magazine
duplicate_magazine(){
	magcode=$1;

	mgsql="select magazine_name from magazine_meta where magazine_code=\"${magcode}\"";
	magname=$(${mysql_cmd} "${mgsql}" 2>/dev/null);
	if [ -z "${magname}" ]; then
		amlog "Magazine : ${magcode} not exist.";
	    return;
	fi

	amlog "magazine name: ${magname}";
	gsql="select concat(b.book_name,'|',b.book_code,'|',b.book_name,'_',b.pk_book,'.pdf') \
		  from \
		      book  b,\
		      (select book_name,count(book_name) ss from  book \
			       where \
				   book_name like \"${magname}%\" \
				   group by book_name having ss > 1\
			  ) p \
		  where \
		      b.book_name = p.book_name";

	${mysql_cmd} "${gsql}" 2>/dev/null | while read ditem; do
		addsql="insert into bag(add_time,bag_status,book_code,status,ts,group_path) \
		values (now(),10,'',0,now(),\"${ditem}\");";

	    ${mysql_cmd} "${addsql}" 2>/dev/null;
	done
}

usage(){
    echo "ambot-book utilities";
	echo "Usage: $0 [param]";
	echo "  -c token       remove redundant content from book name.";
	echo "  -d magcode     retrieve duplicated magazine in groups.";
	echo "  -h             show usage message.";
	echo "  -m             calculate magazine count in groups.";
	echo "  -n hash        check whether a book hash exists.";
	echo "  -p name        retrieve publiher name from file name.";
	echo "  -r code-list   update book name from original version when hash changed.";
	echo "  -t [offset]    trim book name.";
}

init_env;

while getopts "c:d:D:hlmn:p:r:t:" opts; do
    case  ${opts} in
        c ){ clean_token "${OPTARG}";};;
	    d ){ duplicate_magazine "${OPTARG}";};;
        h ){ usage; exit; };;
	    m ){ count_magazine;};;
	    n ){ exists "${OPTARG}";};;
	    p ){ retrieve_publisher_info "${OPTARG}";};;
		r ){ rename_from_last_version "${OPTARG}"; exit;};;
        t ){ ftrim "${OPTARG}";};;
    esac;
done;

